/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/account": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.account.id"];
          email?: parameters["rowFilter.account.email"];
          password?: parameters["rowFilter.account.password"];
          type?: parameters["rowFilter.account.type"];
          stripe_cus_id?: parameters["rowFilter.account.stripe_cus_id"];
          created_at?: parameters["rowFilter.account.created_at"];
          updated_at?: parameters["rowFilter.account.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["account"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** account */
          account?: definitions["account"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.account.id"];
          email?: parameters["rowFilter.account.email"];
          password?: parameters["rowFilter.account.password"];
          type?: parameters["rowFilter.account.type"];
          stripe_cus_id?: parameters["rowFilter.account.stripe_cus_id"];
          created_at?: parameters["rowFilter.account.created_at"];
          updated_at?: parameters["rowFilter.account.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.account.id"];
          email?: parameters["rowFilter.account.email"];
          password?: parameters["rowFilter.account.password"];
          type?: parameters["rowFilter.account.type"];
          stripe_cus_id?: parameters["rowFilter.account.stripe_cus_id"];
          created_at?: parameters["rowFilter.account.created_at"];
          updated_at?: parameters["rowFilter.account.updated_at"];
        };
        body: {
          /** account */
          account?: definitions["account"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/document": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.document.id"];
          title?: parameters["rowFilter.document.title"];
          content?: parameters["rowFilter.document.content"];
          words?: parameters["rowFilter.document.words"];
          ownerId?: parameters["rowFilter.document.ownerId"];
          isShared?: parameters["rowFilter.document.isShared"];
          passcode?: parameters["rowFilter.document.passcode"];
          updatedBy?: parameters["rowFilter.document.updatedBy"];
          created_at?: parameters["rowFilter.document.created_at"];
          updated_at?: parameters["rowFilter.document.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["document"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** document */
          document?: definitions["document"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.document.id"];
          title?: parameters["rowFilter.document.title"];
          content?: parameters["rowFilter.document.content"];
          words?: parameters["rowFilter.document.words"];
          ownerId?: parameters["rowFilter.document.ownerId"];
          isShared?: parameters["rowFilter.document.isShared"];
          passcode?: parameters["rowFilter.document.passcode"];
          updatedBy?: parameters["rowFilter.document.updatedBy"];
          created_at?: parameters["rowFilter.document.created_at"];
          updated_at?: parameters["rowFilter.document.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.document.id"];
          title?: parameters["rowFilter.document.title"];
          content?: parameters["rowFilter.document.content"];
          words?: parameters["rowFilter.document.words"];
          ownerId?: parameters["rowFilter.document.ownerId"];
          isShared?: parameters["rowFilter.document.isShared"];
          passcode?: parameters["rowFilter.document.passcode"];
          updatedBy?: parameters["rowFilter.document.updatedBy"];
          created_at?: parameters["rowFilter.document.created_at"];
          updated_at?: parameters["rowFilter.document.updated_at"];
        };
        body: {
          /** document */
          document?: definitions["document"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  /** @description Punchliner account */
  account: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /** Format: character varying */
    email: string;
    /** Format: character varying */
    password: string;
    /**
     * Format: character varying
     * @default NORMAL
     */
    type: string;
    /** Format: character varying */
    stripe_cus_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
  };
  /** @description User's documents */
  document: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: character varying
     * @default
     */
    title?: string;
    /**
     * Format: text
     * @default
     */
    content?: string;
    /** Format: bigint */
    words: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `account.id`.<fk table='account' column='id'/>
     */
    ownerId: string;
    /**
     * Format: boolean
     * @default false
     */
    isShared?: boolean;
    /** Format: character varying */
    passcode?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `account.id`.<fk table='account' column='id'/>
     */
    updatedBy?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description account */
  "body.account": definitions["account"];
  /** Format: uuid */
  "rowFilter.account.id": string;
  /** Format: character varying */
  "rowFilter.account.email": string;
  /** Format: character varying */
  "rowFilter.account.password": string;
  /** Format: character varying */
  "rowFilter.account.type": string;
  /** Format: character varying */
  "rowFilter.account.stripe_cus_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.account.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.account.updated_at": string;
  /** @description document */
  "body.document": definitions["document"];
  /** Format: uuid */
  "rowFilter.document.id": string;
  /** Format: character varying */
  "rowFilter.document.title": string;
  /** Format: text */
  "rowFilter.document.content": string;
  /** Format: bigint */
  "rowFilter.document.words": string;
  /** Format: uuid */
  "rowFilter.document.ownerId": string;
  /** Format: boolean */
  "rowFilter.document.isShared": string;
  /** Format: character varying */
  "rowFilter.document.passcode": string;
  /** Format: uuid */
  "rowFilter.document.updatedBy": string;
  /** Format: timestamp with time zone */
  "rowFilter.document.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.document.updated_at": string;
}

export interface operations {}

export interface external {}
